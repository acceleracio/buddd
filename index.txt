<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Secure Website Access</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f7fa;
            color: #333;
        }
        .container {
            max-width: 800px;
            margin: 40px auto;
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #2c3e50;
            margin-top: 0;
            text-align: center;
            font-size: 28px;
        }
        .login-form {
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }
        input[type="email"], input[type="text"] {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            box-sizing: border-box;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        input[type="email"]:focus, input[type="text"]:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
        }
        button {
            background-color: #3498db;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background-color 0.3s;
            width: 100%;
        }
        button:hover {
            background-color: #2980b9;
        }
        .message {
            margin: 15px 0;
            padding: 12px;
            border-radius: 6px;
            font-size: 15px;
        }
        .error {
            background-color: #ffebee;
            color: #c62828;
            border-left: 4px solid #c62828;
        }
        .success {
            background-color: #e8f5e9;
            color: #2e7d32;
            border-left: 4px solid #2e7d32;
        }
        .loading {
            background-color: #e3f2fd;
            color: #1565c0;
            border-left: 4px solid #1565c0;
        }
        .access-denied {
            text-align: center;
            padding: 30px;
            background-color: #ffebee;
            border-radius: 8px;
            margin: 20px 0;
        }
        .access-denied h2 {
            color: #c62828;
            margin-bottom: 15px;
        }
        .spinner {
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 3px solid #3498db;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            display: inline-block;
            vertical-align: middle;
            margin-right: 8px;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Secure Website Access</h1>
        <div class="login-form" id="loginForm">
            <h2>Enter your credentials</h2>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" placeholder="Enter your email">
            </div>
            <div class="form-group">
                <label for="otp">One-Time Password:</label>
                <input type="text" id="otp" placeholder="Enter the 6-digit OTP sent to your email">
            </div>
            <button onclick="verifyOTP()">Access Website</button>
            <div id="message" class="message" style="display: none;"></div>
        </div>
        
        <div id="accessDeniedContainer" style="display:none" class="access-denied">
            <h2>Access Denied</h2>
            <p>The OTP you entered has already been used or is invalid.</p>
            <p>Please contact the website administrator for a new OTP.</p>
            <button onclick="resetLoginForm()">Try Again</button>
        </div>
    </div>

    <script>
        // Target website URL to load after successful verification
        const TARGET_WEBSITE = "https://acceleracio.github.io/buddd/";
        
        // Initialize local storage for OTPs if it doesn't exist
        if (!localStorage.getItem('otps')) {
            localStorage.setItem('otps', JSON.stringify({}));
        }
        
        if (!localStorage.getItem('usedOTPs')) {
            localStorage.setItem('usedOTPs', JSON.stringify([]));
        }
        
        // Check if already authenticated in this session
        window.onload = function() {
            checkAuthenticationStatus();
            
            // Listen for postMessage from OTP Generator (Site 2)
            window.addEventListener('message', receiveOTPFromGenerator);
        };
        
        // Receive OTP updates from Site 2 (OTP Generator)
        function receiveOTPFromGenerator(event) {
            // In production, verify the origin
            // if (event.origin !== "https://your-otp-generator-domain.com") return;
            
            try {
                if (event.data && event.data.type === "otpUpdate") {
                    console.log("Received OTP update from generator");
                    
                    const email = event.data.email;
                    const otp = event.data.otp;
                    
                    // Store the new OTP
                    const storedOTPs = JSON.parse(localStorage.getItem('otps') || '{}');
                    storedOTPs[email] = otp;
                    localStorage.setItem('otps', JSON.stringify(storedOTPs));
                    
                    console.log(`Stored new OTP for ${email}`);
                }
            } catch (error) {
                console.error("Error processing message from OTP generator:", error);
            }
        }
        
        // Check if user is authenticated and redirect if necessary
        function checkAuthenticationStatus() {
            const isAuthenticated = sessionStorage.getItem('isAuthenticated');
            
            if (isAuthenticated === 'true') {
                // User is already authenticated, redirect to target website
                window.location.href = TARGET_WEBSITE;
            }
        }
        
        // Validate email format
        function isValidEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }
        
        // Reset the login form for a new attempt
        function resetLoginForm() {
            document.getElementById('email').value = '';
            document.getElementById('otp').value = '';
            
            const messageDiv = document.getElementById('message');
            messageDiv.style.display = 'none';
            messageDiv.textContent = '';
            messageDiv.className = 'message';
            
            document.getElementById('accessDeniedContainer').style.display = 'none';
            document.getElementById('loginForm').style.display = 'block';
        }
        
        // Show a message with appropriate styling
        function showMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = text;
            messageDiv.className = `message ${type}`;
            messageDiv.style.display = 'block';
        }
        
        async function verifyOTP() {
            const email = document.getElementById('email').value.trim();
            const otp = document.getElementById('otp').value.trim();
            
            // Show loading state
            showMessage("Verifying your credentials...", "loading");
            
            // Validate inputs
            if (!email || !otp) {
                showMessage("Please enter both email and OTP", "error");
                return;
            }
            
            if (!isValidEmail(email)) {
                showMessage("Please enter a valid email address", "error");
                return;
            }
            
            try {
                // Simulate network delay for realistic experience
                await new Promise(resolve => setTimeout(resolve, 800));
                
                // Verify OTP against stored values
                const storedOTPs = JSON.parse(localStorage.getItem('otps') || '{}');
                const usedOTPs = JSON.parse(localStorage.getItem('usedOTPs') || '[]');
                
                // Check if this combination is in the used OTPs list
                if (usedOTPs.includes(`${email}:${otp}`)) {
                    document.getElementById('loginForm').style.display = 'none';
                    document.getElementById('accessDeniedContainer').style.display = 'block';
                    return;
                }
                
                // Check if the OTP exists and matches
                if (storedOTPs[email] === otp) {
                    // Mark this OTP as used
                    usedOTPs.push(`${email}:${otp}`);
                    localStorage.setItem('usedOTPs', JSON.stringify(usedOTPs));
                    
                    // Show success message
                    showMessage("Verification successful! Redirecting you now...", "success");
                    
                    // Save authentication state in session storage
                    sessionStorage.setItem('isAuthenticated', 'true');
                    
                    // Redirect to target website after a short delay
                    setTimeout(() => {
                        window.location.href = TARGET_WEBSITE;
                    }, 1500);
                } else {
                    // Invalid OTP
                    showMessage("Invalid credentials. Please check your email and OTP.", "error");
                }
            } catch (error) {
                console.error("Error during verification:", error);
                showMessage("Verification failed. Please try again.", "error");
            }
        }
    </script>
</body>
</html>
